openapi: 3.0.0
info:
  title: MCP Chatbot Tools API
  version: 1.0.0
  description: MCP server tools for event management and document search

servers:
  - url: https://4fsaarjly6.execute-api.ap-southeast-1.amazonaws.com/prod
    description: Production MCP API endpoint

paths:
  /list_events:
    post:
      operationId: list_events
      summary: List all events from the database
      description: Retrieve all events. Use this to find events by name or see all available events.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
      responses:
        '200':
          description: List of events
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                  count:
                    type: integer

  /create_event:
    post:
      operationId: create_event
      summary: Create a new event in the database
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  required:
                    - name
                    - location
                    - date
                  properties:
                    name:
                      type: string
                      description: Event name
                    location:
                      type: string
                      description: Event location
                    date:
                      type: string
                      format: date
                      description: Event date (YYYY-MM-DD)
                    category:
                      type: string
                      description: Event category
                    description:
                      type: string
                      description: Event description
      responses:
        '200':
          description: Event created successfully

  /read_event:
    post:
      operationId: read_event
      summary: Read a specific event by ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - record_id
              properties:
                record_id:
                  type: string
                  description: Event ID to retrieve
      responses:
        '200':
          description: Event details

  /update_event:
    post:
      operationId: update_event
      summary: Update an existing event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - record_id
                - data
              properties:
                record_id:
                  type: string
                  description: Event ID to update
                data:
                  type: object
                  description: Updated event data
      responses:
        '200':
          description: Event updated successfully

  /delete_event:
    post:
      operationId: delete_event
      summary: Delete an event from the database
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - record_id
              properties:
                record_id:
                  type: string
                  description: Event ID to delete
      responses:
        '200':
          description: Event deleted successfully

  /search_documents:
    post:
      operationId: search_documents
      summary: Search documents using vector similarity
      description: Search documents for RAG queries using semantic search
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - query
              properties:
                query:
                  type: string
                  description: Search query text
                limit:
                  type: integer
                  default: 5
                  description: Maximum number of results
                threshold:
                  type: number
                  format: float
                  default: 0.7
                  description: Minimum similarity score
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  results:
                    type: array
                    items:
                      type: object
                  total_results:
                    type: integer
