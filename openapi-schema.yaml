openapi: 3.0.3
info:
  title: MCP Chatbot API
  description: WebSocket chatbot with RAG document upload capabilities
  version: 1.0.0
  contact:
    name: Chatbot API Support
    email: support@example.com

servers:
  - url: https://ynw017q5lc.execute-api.ap-southeast-1.amazonaws.com
    description: Production WebSocket API

paths:
  /upload:
    post:
      summary: Generate presigned URL for document upload
      description: Creates a presigned URL for secure document upload to S3
      operationId: generateUploadUrl
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadRequest'
            example:
              filename: "document.pdf"
              file_type: "pdf"
              file_size: 1024000
      responses:
        '200':
          description: Presigned URL generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /documents:
    get:
      summary: List uploaded documents
      description: Retrieve list of uploaded documents
      operationId: listDocuments
      responses:
        '200':
          description: Documents listed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentListResponse'

  # WebSocket endpoint (conceptual - actual WebSocket doesn't use REST paths)
  /websocket:
    get:
      summary: WebSocket connection endpoint
      description: Connect to WebSocket for real-time chat
      parameters:
        - name: Upgrade
          in: header
          required: true
          schema:
            type: string
            enum: [websocket]
        - name: Connection
          in: header
          required: true
          schema:
            type: string
            enum: [Upgrade]
      responses:
        '101':
          description: Switching Protocols - WebSocket connection established
        '403':
          description: Forbidden - Invalid connection request

components:
  schemas:
    UploadRequest:
      type: object
      required:
        - filename
      properties:
        filename:
          type: string
          description: Name of the file to upload
          example: "document.pdf"
        file_type:
          type: string
          enum: [pdf, txt, docx, md]
          description: File extension/type
          example: "pdf"
        file_size:
          type: integer
          minimum: 1
          maximum: 52428800
          description: File size in bytes (max 50MB)
          example: 1024000

    UploadResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        upload_id:
          type: string
          description: Unique upload identifier
          example: "uuid-123-456"
        upload_url:
          type: string
          format: uri
          description: Presigned URL for PUT upload
          example: "https://bucket.s3.amazonaws.com/uploads/file.pdf?presigned-params"
        download_url:
          type: string
          format: uri
          description: Presigned URL for GET download
        object_key:
          type: string
          description: S3 object key
          example: "uploads/uuid-123_document.pdf"
        bucket_name:
          type: string
          description: S3 bucket name
        expires_in:
          type: integer
          description: URL expiry time in seconds
          example: 3600
        content_type:
          type: string
          description: MIME content type
          example: "application/pdf"
        upload_instructions:
          type: object
          properties:
            method:
              type: string
              enum: [PUT]
            headers:
              type: object
              properties:
                Content-Type:
                  type: string
            max_file_size:
              type: integer
            allowed_types:
              type: array
              items:
                type: string

    DocumentListResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        documents:
          type: array
          items:
            $ref: '#/components/schemas/DocumentInfo'
        total_count:
          type: integer
          example: 5
        bucket_name:
          type: string

    DocumentInfo:
      type: object
      properties:
        key:
          type: string
          description: S3 object key
        filename:
          type: string
          description: Original filename
        size:
          type: integer
          description: File size in bytes
        last_modified:
          type: string
          format: date-time
          description: Last modification timestamp
        upload_id:
          type: string
          description: Upload identifier
        file_type:
          type: string
          description: File extension
        upload_timestamp:
          type: string
          format: date-time

    # WebSocket Message Schemas
    WebSocketMessage:
      type: object
      required:
        - action
        - sessionId
        - message
        - timestamp
      properties:
        action:
          type: string
          enum: [sendMessage]
          description: WebSocket action type
          example: "sendMessage"
        sessionId:
          type: string
          description: Unique session identifier
          example: "session-123-456"
        message:
          type: string
          description: Chat message content
          example: "Hello, how can you help me?"
        timestamp:
          type: string
          format: date-time
          description: Message timestamp
          example: "2025-01-03T10:30:00.000Z"

    WebSocketResponse:
      type: object
      properties:
        type:
          type: string
          enum: [message, error, status]
          description: Response type
        content:
          type: string
          description: Response content/message
        sessionId:
          type: string
          description: Session identifier
        timestamp:
          type: string
          format: date-time
        metadata:
          type: object
          description: Additional response metadata
          properties:
            messageType:
              type: string
              enum: [general, rag, mcp_tool]
            sources:
              type: array
              items:
                type: string
              description: RAG document sources
            toolsUsed:
              type: array
              items:
                type: string
              description: MCP tools utilized

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error type
          example: "Upload validation failed"
        message:
          type: string
          description: Detailed error message
          example: "File type 'exe' not allowed. Allowed types: pdf, txt, docx, md"

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authentication (if implemented)

# WebSocket connection info (not standard OpenAPI)
x-websocket:
  url: wss://ynw017q5lc.execute-api.ap-southeast-1.amazonaws.com/prod
  protocols: []
  description: |
    WebSocket connection for real-time chat functionality.
    
    Connection: wss://ynw017q5lc.execute-api.ap-southeast-1.amazonaws.com/prod
    
    Message format:
    ```json
    {
      "action": "sendMessage",
      "sessionId": "unique-session-id",
      "message": "Your message here",
      "timestamp": "2025-01-03T10:30:00.000Z"
    }
    ```
    
    Response format:
    ```json
    {
      "type": "message",
      "content": "AI response here",
      "sessionId": "unique-session-id",
      "timestamp": "2025-01-03T10:30:00.000Z",
      "metadata": {
        "messageType": "general|rag|mcp_tool",
        "sources": ["document1.pdf"],
        "toolsUsed": ["database_search"]
      }
    }
    ```

tags:
  - name: Documents
    description: Document upload and management operations
  - name: WebSocket
    description: Real-time chat functionality
  - name: RAG
    description: Retrieval-Augmented Generation features
  - name: MCP
    description: Model Context Protocol tool usage